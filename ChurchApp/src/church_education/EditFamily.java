/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package church_education;

import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Ebrahim
 */
public class EditFamily extends javax.swing.JFrame {

    /** Creates new form NewFamily */
    LogIn login = new LogIn();
    Connection con = login.con;
    Persons person = new Persons(con);
    Statement st = null;
    PreparedStatement pst = null;
    ResultSet rs;
    
    private String check = "";
    private String frname = "";
    private String frnumber = "";
    private String frchurch = "";
    private String stname = "";
    private String stname2 = "";
    private String area = "";
    
    private String name1 = "";
    private String name2 = "";
    private String name3 = "";
    private String name4 = "";
    private java.sql.Date date = null;
    private int flat;
    private int floor;
    private int house;
    private String street1 = "";
    private String street2 = "";
    private String father = "";
    private String gender = "";
    private String phone = "";
    private String mobile = "";
    private String family = "";
    private String job = "";
    private String education = "";
    private String mnumber = "";
    private String mjob = "";
    private String fnumber = "";
    private String fjob = "";
    private String servant[];
    
    private String sname1 = "";
    private String sname2 = "";
    private String sname3 = "";
    private String sname4 = "";
    private java.sql.Date sdate = null;
    private int sflat;
    private int sfloor;
    private int shouse;
    private String sstreet1 = "";
    private String sstreet2 = "";
    private String sfather = "";
    private String sgender = "";
    private String sphone = "";
    private String smobile = "";
    private String sfamily1 = "";
    private String sfamily2 = "";
    private String sjob = "";
    private String cname = "";
    private String oldfamily = "";
    private String oldLeader = null;
    
//    private javafx.scene.control.TextField textField = new javafx.scene.control.TextField();
    private ArrayList<String> streetsnames = new ArrayList<>();
    private ArrayList<String> areasnames = new ArrayList<>();
    private ArrayList<String> servantsnames = new ArrayList<>();
    private ArrayList<String> fathers = new ArrayList<>();
    private ArrayList<String> families = new ArrayList<>();
    private ArrayList<String> assistance = new ArrayList<>();
    private ArrayList<String> educations = new ArrayList<>();
    private AutoComplete2 ac = new AutoComplete2();
    
    
    public EditFamily(String oldFamily) {
        initComponents();
        this.oldfamily = oldFamily;
        fill();
    }
    
    private void fill(){
        try {
            FamilyName.setText(oldfamily);
            pst = (PreparedStatement) con.prepareStatement("select FirstName, SecondName, ThirdName from Persons p " + 
                    " inner join Families f on f.Leader = p.PersonID where f.FamilyName = ?");
            pst.setString(1, oldfamily);
            rs = pst.executeQuery();
            if(rs.next()){
                oldLeader = rs.getString("FirstName") + " " + rs.getString("SecondName") + " " + rs.getString("ThirdName");
                Leader.setText(oldLeader);
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditFamily.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        Leader = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        FamilyName = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));

        jLabel50.setFont(jLabel50.getFont().deriveFont(jLabel50.getFont().getStyle() | java.awt.Font.BOLD, jLabel50.getFont().getSize()+4));
        jLabel50.setText("امين الاسرة");

        Leader.setFont(Leader.getFont().deriveFont(Leader.getFont().getSize()+4f));
        Leader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LeaderMouseEntered(evt);
            }
        });

        jButton6.setFont(jButton6.getFont().deriveFont(jButton6.getFont().getStyle() | java.awt.Font.BOLD, jButton6.getFont().getSize()+4));
        jButton6.setText("حفظ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        FamilyName.setFont(FamilyName.getFont().deriveFont(FamilyName.getFont().getSize()+4f));

        jLabel53.setFont(jLabel53.getFont().deriveFont(jLabel53.getFont().getStyle() | java.awt.Font.BOLD, jLabel53.getFont().getSize()+4));
        jLabel53.setText("الاسم");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(Leader, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)
                                .addComponent(jLabel50))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(FamilyName, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel53))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FamilyName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel53))
                .addGap(25, 25, 25)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Leader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel50))
                .addGap(18, 18, 18)
                .addComponent(jButton6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String fam = FamilyName.getText();
        String[] servant = Leader.getText().split("\\s+");
        int servantID = -1;
        if(person.FixString(fam).isEmpty()){
            JOptionPane.showMessageDialog(null,  "رجاء ادخال اسم الاسرة ", "Alert", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            pst = (PreparedStatement) con.prepareStatement("SELECT * FROM Families WHERE FamilyName = ?");
            pst.setString(1, fam);
            rs = pst.executeQuery();
            if(rs.next() && (Leader.getText() == oldLeader || Leader.getText().equals(oldLeader))){
                JOptionPane.showMessageDialog(null, "هذة الاسرة موجودة بالفعل !", "message", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (SQLException ex) {
            Logger.getLogger(EditFamily.class.getName()).log(Level.SEVERE, null, ex);
        }

        try{
            if(servant.length == 4){
                pst = (PreparedStatement) con.prepareStatement("SELECT PersonID FROM Persons WHERE FirstName = ? AND SecondName = ? AND ThirdName = ? AND FourthName = ? LIMIT 1");
                pst.setString(1, servant[0]);
                pst.setString(2, servant[1]);
                pst.setString(3, servant[2]);
                pst.setString(4, servant[3]);
                rs = pst.executeQuery();
                if(rs.next())
                servantID = rs.getInt(1);
            }else if(servant.length == 3){
                pst = (PreparedStatement) con.prepareStatement("SELECT PersonID FROM Persons WHERE FirstName = ? AND SecondName = ? AND ThirdName = ? LIMIT 1");
                pst.setString(1, servant[0]);
                pst.setString(2, servant[1]);
                pst.setString(3, servant[2]);
                rs = pst.executeQuery();
                if(rs.next())
                servantID = rs.getInt(1);
            }else if(servant.length == 2){
                pst = (PreparedStatement) con.prepareStatement("SELECT PersonID FROM Persons WHERE FirstName = ? AND SecondName = ? LIMIT 1");
                pst.setString(1, servant[0]);
                pst.setString(2, servant[1]);
                rs = pst.executeQuery();
                if(rs.next())
                servantID = rs.getInt(1);
            }else{
                servantID = -1;
            }
            if(servantID == -1){
                pst = (PreparedStatement) con.prepareStatement("update Families set FamilyName = ? where FamilyName = ?");
                pst.setString(1, fam);
                pst.setString(2, oldfamily);
                pst.executeUpdate();
            }else{
                pst = (PreparedStatement) con.prepareStatement("update Families set FamilyName = ?, Leader = ? where FamilyName = ?");
                pst.setString(1, fam);
                pst.setInt(2, servantID);
                pst.setString(3, oldfamily);
                pst.executeUpdate();
            }
            if(servantID != -1)
            person.addDistribution(fam, servantID, 0);
            FamilyName.setText("");
            Leader.setText("");
            JOptionPane.showMessageDialog(null, "Done!", "message", JOptionPane.INFORMATION_MESSAGE);

        }catch(Exception e){
            System.err.println(e);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void LeaderMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LeaderMouseEntered
        try {
            // TODO add your handling code here:
            servantsnames = person.getServantsNames();
            ac.autoComplete(Leader, servantsnames);
        } catch (SQLException ex) {
            Logger.getLogger(EditFamily.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LeaderMouseEntered

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FamilyName;
    private javax.swing.JTextField Leader;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JPanel jPanel8;
    // End of variables declaration//GEN-END:variables

}
